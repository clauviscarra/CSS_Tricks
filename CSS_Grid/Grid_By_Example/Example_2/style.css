/*
Using the Grid I defined in example 1, I am positioning the elements in my markup (six divs with a class of box and classes from a to f) using line-based placement properties. This example is more verbose than it needs to be as a demonstration of the properties. In reality if an item will only span one grid track you may omit the -end value.

*/

* {
  font-family: sans-serif;
}

body{
  max-width: 1920px;
  margin:0 auto;
  /*centering wrapper*/
}

/* Parent element */

.wrapper{
  max-width: 320px;
  margin:0 auto;
  display: grid;
  grid-template-columns: 100px 100px 100px;
  grid-gap:10px;
  background-color: #fff;
  color: #444;
}

/* Direct children (child) */
.box{
  background-color: #444;
  color:#fff;
  border-radius: 5px;
  padding:20px;
  font-size:150%;
}

.a {
        grid-column-start: 2;
        grid-column-end: 3; /*you can ommit the end attributes and still get the same result :) */
        grid-row-start: 1;
        grid-row-end: 2;
    }
    .b {
        grid-column-start: 2;
        grid-column-end: 3;
        grid-row-start: 2;
        grid-row-end: 3;
    }
    .c {
        grid-column-start: 3;
        grid-column-end: 4;
        grid-row-start: 2;
        grid-row-end: 3;
    }
    .d {
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 1;
        grid-row-end: 2;
    }
    .e {
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 2;
        grid-row-end: 3;
    }
    .f {
        grid-column-start: 3;
        grid-column-end: 4;
        grid-row-start: 1;
        grid-row-end: 2;
    }
