/*
We can achieve the same result as in example 2 and 3 declaring all four values with the grid-area property. Again values are separated with a /. The order of the values is row-start/column-start/row-end/column-end.

*/

* {
  font-family: sans-serif;
}

body{
  max-width: 1920px;
  margin:0 auto;
  /*centering wrapper*/
}

/* Parent element */

.wrapper{
  max-width: 320px;
  margin:0 auto;
  display: grid;
  grid-template-columns: 100px 100px 100px;
  grid-gap:10px;
  background-color: #fff;
  color: #444;
}

/* Direct children (child) */
.box{
  background-color: #444;
  color:#fff;
  border-radius: 5px;
  padding:20px;
  font-size:150%;
  text-align: center;
}

.a {
  grid-area: 1 / 2 / 2 / 3
}
.b {
  grid-area: 2 / 2 / 3 / 3
}
.c {
  grid-area: 2 / 3 / 3 / 4
}
.d {
  grid-area: 1 / 1 / 2 / 2
}
.e {
  grid-area: 2 / 1 / 3 / 2
}
.f {
  grid-area: 1 / 3 / 2 / 4
}
