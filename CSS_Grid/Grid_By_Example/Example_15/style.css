/*

You can layer items in the Grid, using z-index to control the order that they stack. In this example I have boxes arranged on a grid, my box F is last in the source order and positioned on the Grid so it partly overlaps box D.

Without any z-index property it will display on top of box D. However I can add a z-index and control the position which works as you would expect if you have used the z-index property with positioned elements.

*/

* {
  font-family: sans-serif;
}

body {
  max-width: 1120px;
  margin: 0 auto;
}

.box {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  margin: 20px 0 20px 0;
  font-size: 150%;
}

.wrapper {
  width: 400px;
  display: grid;
  grid-gap: 1em;
  grid-template-columns: repeat(5, [col] 100px);
  grid-template-rows: repeat (3, [row] auto);
  background-color: #fff;
  color: #444;
}

.a {
  grid-column: col / span 2;
  grid-row: row;
}

.b {
  grid-column: col 3 / span 3;
  grid-row: row;
}

.c {
  grid-column: col;
  grid-row: row 2;
}

.d {
  grid-column: col 2 / span 3;
  grid-row: row 2;
}

.e {
  grid-column: col / span 5;
  grid-row: row 3;
}

.f {
  grid-column: col 3 / span 3;
  grid-row: row 2;
  background-color: rgba(49, 121, 207, 0.5);
  z-index: 20;
}
