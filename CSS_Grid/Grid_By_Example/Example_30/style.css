/*
In this example I am creating a grid that contains as many 200 pixel column tracks as will fit into the container with the remaining space shared equally between the columns. In the minmax() function the first value is the minimum size I want my tracks to be, the second is the maximum. By using 1fr as the maximum value the space is equally distributed.

I am then spanning columns and rows. As the items are auto-placed on our flexible grid they will move around the grid but maintain their spanned size.*/

* {
  font-family: sans-serif;
}

body {
  max-width: 1120px;
  margin: 0 auto;
}

.wrapper{
  width: 100%;
  display: grid;
  grid-gap: 1em;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
}

.box{
  background-color: #444;
  color: white;
  padding: 20px;
  border-radius: 5px;
  font-size: 150%;

}

.a{
  grid-column: auto / span 2;
}

.g{
  grid-column: auto / span 2;
  grid-row: auto /span 2;
}

.k{
  grid-column: auto / span 3;
}
